{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","useState","markDown","setMarkDown","className","value","onChange","e","target","id","dangerouslySetInnerHTML","__html","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,YCIXA,EAASC,EAAQ,IA2FNC,MAzFf,WACE,IADa,EAkEmBC,mBAjEf,28CADJ,mBAkENC,EAlEM,KAkEIC,EAlEJ,KAoEb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,0BACEC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAOH,QACtCI,GAAG,WAML,qBACEC,wBAAyB,CAAEC,OAAQb,EAAOI,IAC1CO,GAAG,kBC5EEG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.25ebc4de.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nlet marked = require(\"marked\");\n\nfunction App() {\n  const placeHolder = `---\n  ### _A Simple Responsive Markdown Previewer Powered by React Cleansed with DOMPurify_\n  created by: Stuart Peel\n  \n  ---\n  # Heading - Level I\n  ## Heading - Level II\n  ### Heading - Level III\n  \n  Wrap in-line code between backticks:\n  \n  text text \\`<div>In-line Code</div>\\` more text\n  \n  \\`\\`\\`\n  /* multi-line code wrapped\n     with 3 x backticks */\n  \n    if (count <= 0){\n      console.log(count + \" Hold\");\n        return count + \" Hold\";\n        } else if (count > 0){\n          console.log(count + \" Bet\");\n        return count + \" Bet\";\n        }\n        return cc;\n    }\n  \\`\\`\\`\n    \n  **bold text**\n  _italic text_.\n  **_bold italics_**\n   ~~cross stuff out~~\n  \n  Create [links](https://www.freecodecamp.com) NB: open in a new tab on CodePen else **_bigga bang badda boom!_**\n  > Block Quotes!\n  \n  tables:\n  \n   Header |  Header |  Header\n  ------------ | ------------- | ------------- \n  content  | content | content\n  content | content | content\n  \n  Lists with different indentation levels:\n  - List item\n    - List item\n    - List item\n       - List item\n       - List item\n          - List item\n  \n  Numbered lists\n  1. Just use  1's\n  1. and list numbers \n  1. are automatically generated\n  \n  Bulleted lists\n  - use dashes\n  * or asterisks\n  \n  or embedded images:\n  \n  ![React Logo w/ Text](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/320px-React-icon.svg.png)\n  `;\n\n  const [markDown, setMarkDown] = useState(placeHolder);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <textarea\n          value={markDown}\n          onChange={(e) => setMarkDown(e.target.value)}\n          id=\"editor\"\n        />\n        {/* {console.log(markDown)}\n        <div id=\"preview\">\n          <ReactMarkdown>{markDown}</ReactMarkdown>\n        </div> */}\n        <div\n          dangerouslySetInnerHTML={{ __html: marked(markDown) }}\n          id=\"preview\"\n        ></div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}